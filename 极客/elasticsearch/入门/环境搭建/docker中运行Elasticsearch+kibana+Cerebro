1. 安装docker-compose
    ```
    curl -L https://get.daocloud.io/docker/compose/releases/download/1.22.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
    chmod +x /usr/local/bin/docker-compose
    ```
2. 获取docker-compose文件
    ```
version: '2.2'
services:
  cerebro:
    image: lmenezes/cerebro:0.8.3
    container_name: cerebro
    ports:
      - "9000:9000"
    command:
      - -Dhosts.0.host=http://192.168.0.9:9200
    networks:
      - es7net
  kibana:
    image: kibana:7.1.0
    container_name: kibana7
    environment:
      - I18N_LOCALE=zh-CN
      - XPACK_GRAPH_ENABLED=true
      - TIMELION_ENABLED=true
      - XPACK_MONITORING_COLLECTION_ENABLED="true"
    ports:
      - "5601:5601"
    networks:
      - es7net
    volumes:
      - /usr/local/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:rw
  elasticsearch:
    image: elasticsearch:7.1.0
    container_name: es7_01
    environment:
      - cluster.name=geektime
      - node.name=es7_01
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.seed_hosts=es7_01,es7_02
      - cluster.initial_master_nodes=es7_01,es7_02
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es7data1:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - es7net
  elasticsearch2:
    image: elasticsearch:7.1.0
    container_name: es7_02
    environment:
      - cluster.name=geektime
      - node.name=es7_02
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.seed_hosts=es7_01,es7_02
      - cluster.initial_master_nodes=es7_01,es7_02
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es7data2:/usr/share/elasticsearch/data
    networks:
      - es7net
  volumes:
    es7data1:
      driver: local
    es7data2:
      driver: local
  networks:
    es7net:
      driver: bridge
    ```
2. 指定一个路径创建一个config目录,用于存放kibana.yml
   ```
   mkdir -p /usr/local/kibana/config
   ```
3. 配置kibana.yml文件
   ```
    server.name: kibana
    server.host: "0.0.0.0"
    elasticsearch.hosts: [ "http://172.16.11.248:9200" ]   ## es地址
    xpack.monitoring.ui.container.elasticsearch.enabled: true
   ```

4. 运行docker-compose.yaml文件
   ```
   docker-compose up
   ```
5. 错误
  ```
    启动失败，检查没有通过，报错
    [2018-05-18T17:44:59,658][INFO ][o.e.b.BootstrapChecks    ] [gFOuNlS] bound or publishing to a non-loopback address, enforcing bootstrap checks
    ERROR: [2] bootstrap checks failed
    [1]: max file descriptors [4096] for elasticsearch process is too low, increase to at least [65536]
    [2]: max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]
    [1]: max file descriptors [65535] for elasticsearch process is too low, increase to at least [65536]
  ```

6. 解决错误
  ```
    [1]: max file descriptors [65535] for elasticsearch process is too low, increase to at least [65536]
    编辑 /etc/security/limits.conf，追加以下内容；
    * soft nofile 65536
    * hard nofile 65536
    此文件修改后需要重新登录用户，才会生效

    [2]: max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]
    编辑 /etc/sysctl.conf，追加以下内容：
    vm.max_map_count=655360
    保存后，执行：
    sysctl -p
    重新启动，成功。
  ```
