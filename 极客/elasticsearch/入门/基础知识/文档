+ 文档document
  ```
  文档的格式是json式的。
  对于文档，有几个主要的标识信息：_index(插入到哪个索引中),_type(插入到哪个类型中),_id(文档的id是多少)，
  在插入一个文档的时候，这几个信息也是必须的。
  ```
   + 插入数据
   ```
   PUT /index/type/id
   json格式的数据
   栗子：
   PUT /douban/book/4
    {
    	"book_id":4,
    	"book_name":"Other Voices, Other Rooms",
    	"book_author":"Truman Capote",
    	"book_pages":240,
    	"book_express":"Vintage",
    	"publish_date":"1994-02-01",
    	"book_summary":"""
      Truman Capote’s first novel is a story of almost supernatural intensity and inventiveness, an audacious foray into the mind of a sensitive boy as he seeks out the grown-up enigmas of love and death in the ghostly landscape of the deep South.

      At the age of twelve, Joel Knox is summoned to meet the father who abandoned him at birth. But when Joel arrives at the decaying mansion in Skully’s Landing, his father is nowhere in sight. What he finds instead is a sullen stepmother who delights in killing birds; an uncle with the face—and heart—of a debauched child; and a fearsome little girl named Idabel who may offer him the closest thing he has ever known to love."""
    }

    返回结果：
    {
      "_index":"douban",
      "_type":"book",
      "_id":4,
      "_version":2,
      "result":"updated",
      "_shards":{
        "total":2,
        "successful":1,
        "failed":0
      },
      "_seq_no":2,
      "_primary_term":10
    }

    _index：插入到哪个index中。
    _type：插入到哪个type中。
    _id：插入的文档的id是多少。
    _version：版本，对这个ID的文档的操作次数
    result：操作结果，第一次操作时created，上图中因为我忘记截图了，所以重新插入了一次，所以时updated
    _shards：
    total:总共有多少个shard
    successful:成功多少个，【由于写操作只会发生在primary shard中，所以这里为1，另一个shard时replica shard，不发生写操作】
    failed:失败多少个
   ```
   + 查询指定文档
   ```
   语法
   GET /index/type/id
   ```
   + 更新文档
   ```
   // 全替换(覆盖)式更新：会使用新的json数据直接覆盖原有的【请不要复制注释】
    PUT /index/type/id
    json数据

    // 部分替换式更新：只会覆盖指定数据
    POST /index/type/id/_update
    {
      "doc": {
        "需要修改的字段": "修改值"
        [,"需要修改的字段": "修改值"]
      }
    }

    栗子：
    【全替换语句与插入差不多，所以不举例了】

    POST /douban/book/4/_update
    {
      "doc": {
        "book_pages":241,
        "publish_date":"1994-02-02"
      }
    }
   ```
   + 删除文档
   ```
   语法：
    DELETE /index/type/id
    例子：
    【删除后可以重新执行插入语句恢复数据】
     DELETE /douban/book/4

     结果解析：
     返回结果与插入时大概一致，不同的时result变成了deleted.
   ```
   + 查询所有文档
   ```
   GET /index/type/_search

    GET /index/type/_search
    {
      "query":{
        "match_all": {}
      }
    }

    栗子：

    GET /douban/book/_search

    GET /douban/book/_search
    {
      "query":{
        "match_all": {}
      }
    }
   ```
