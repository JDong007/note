+ 节点是一个Elasticsearch的实例
   + 本质就是一个JAVA进程
   + 一台机器上可以运行多个Elasticsearch进程，但是生产环境建议一台机器上只运行一个实例
   + 每个节点都有名字，通过配置文件配置，或者启动时候 -E node.name=node1指定
   + 每一个节点在启动之后，会分配一个UID，保存在data目录下

+ Master-eligible nodes 和 Master Node
   + 每个节点启动后，默认就是一个Master eligible节点
      + 可以设置 node.master:false 禁止
   + Master-eligible节点 可以参与选主流程，成为Master节点
   + 当第一个节点启动的时候，它会将自己选举成Master节点
   + 每个节点上都保存了集群的状态，只有Master节点才能修改集群都状态信息
      + 集群状态（Cluster State）,维护了一个集群中，必要的信息
         + 所有都节点信息
         + 所有的索引和其相关的Mapping 与 Setting信息
         + 分片的路由信息
      + 任意节点都能修改信息会导致数据的不一致性
+ Data Node & Coordinating Node
   + Data Node
      + 可以保存数据的节点，叫做Data Node。负责保存分片数据。在数据扩展上起到了至关重要的作用
   + Coordinating Node
      + 负责接收Client的请求，将请求分发到合适的节点，最终把结果汇集到一起
      + 每个节点默认都起到了Coordinating Node 的职责
+ 其他节点类型
   + Hot & Warm Node
      + 不同硬件配置的Data Node,用来实现Hot & Warm 架构，降低集群部署的成本
   + Machine Learning Node
      + 负责跑机器学习的Job，用来做异常检测
   + Tribe Node
      + (5.3 开始使用Cross Cluster Serarch) Tribe Node 连接到不同的Elasticsearch集群，并且支持将这些集群当成一个单独都集群处理

+ 配置节点类型
   + 开发环境中一个节点可以承担多种角色
   + 生产环境中，应该设置单一的角色都节点（dedicated node）

  节点类型               |配置参数      |默认值
  --|                    :--:          |--:
  master eligible       |node.master  |true
  data                  |node.data    |true
  ingest                |node.ingest  |true
  coordinating only     |无           |每个节点默认都是coordinating节点。设置其他类型全部为false
  machine learning      |node.ml      |true(需enable x-pack)
